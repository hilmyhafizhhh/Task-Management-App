"""
Django settings for taskmanager project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x8n(7(^x*(s)fak9pb+btlqxsd#i8ph%wdc!q#*y9jr99(b%dy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Set False untuk production

ALLOWED_HOSTS = []  # Tambahkan domain atau IP server saat di production

# Application definition
INSTALLED_APPS = [
    # Aplikasi bawaan Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Aplikasi buatan sendiri
    'tasks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Keamanan tambahan (misalnya, HTTPS)
    'django.contrib.sessions.middleware.SessionMiddleware',  # Mengelola sesi pengguna
    'django.middleware.common.CommonMiddleware',  # Middleware umum untuk optimasi
    'django.middleware.csrf.CsrfViewMiddleware',  # Proteksi terhadap serangan CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Autentikasi pengguna
    'django.contrib.messages.middleware.MessageMiddleware',  # Flash messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Perlindungan terhadap Clickjacking
]

ROOT_URLCONF = 'taskmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Tambahkan path folder template khusus jika diperlukan
        'APP_DIRS': True,  # Cari template di folder aplikasi
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'taskmanager.wsgi.application'

# Database configuration
# Using PostgreSQL for production
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'taskmanager_db',  # Nama database
        'USER': 'postgres',  # Nama user PostgreSQL
        'PASSWORD': 'tamankota',  # Password user PostgreSQL
        'HOST': 'localhost',  # Alamat server PostgreSQL
        'PORT': '5432',  # Port default PostgreSQL
    }
}

# Password validation
# Tambahkan validasi password untuk meningkatkan keamanan
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'  # Bahasa default
TIME_ZONE = 'UTC'  # Zona waktu
USE_I18N = True  # Mendukung penerjemahan
USE_TZ = True  # Gunakan zona waktu

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirect settings
# Tentukan halaman redirect setelah login dan logout
LOGIN_REDIRECT_URL = 'home'  # Redirect ke halaman "home" setelah login
LOGOUT_REDIRECT_URL = 'landing_page'  # Redirect ke halaman "landing_page" setelah logout
